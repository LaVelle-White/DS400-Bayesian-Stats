---
title: "NHANES Challenge"
format: html
editor: visual
---

### Load Libraries

```{r}

```

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(tidyverse)
library(haven)
library(here)
library(ggplot2)
library(janitor)
library(scales)
```

### Read-in Datasets for this Analysis:

-   DR1TOT_J.xpt as 'diet_behavior'
-   2017-2018_Hg-Blood.XPT as 'blood_hg'
-   2017-2018_Hg-Urine.XPT as 'urine_hg'
-   2017-2018_Diabetes.XPT as 'diabetes'

```{r}
diet_behavior <- read_xpt(here("data/nhanes_data/DR1TOT_J.XPT"))
blood_hg <- read_xpt(here("data/nhanes_data/2017-2018_Hg-Blood.XPT"))
urine_hg <- read_xpt(here("data/nhanes_data/2017-2018_Hg-Urine.XPT"))
diabetes <- read_xpt(here("data/nhanes_data/2017-2018_Diabetes.XPT"))
demographics <- read_xpt(here("data/nhanes_data/2017-2018_Demographics.XPT"))
```

### Subset Read-in Datasets

Subset 'diet_behavior' as 'diet'

```{r}
diet <- select(diet_behavior, SEQN, DRD360, DRD370B, DRD370BQ, DRD370Q, DRD370QQ)
```

Subset 'diabetes' as 'tiid'

```{r}
tiid <- select(diabetes, SEQN, DIQ010, DIQ170)
```

Subset 'blood_hg' as 'bhg'

```{r}
bhg <- select(blood_hg, SEQN, LBXIHG, LBDIHGSI, LBXBGE, LBXBGM)
```

Subset "urine_hg' as 'uhg'

```{r}
uhg <- select(urine_hg, SEQN, URXUHG)
```

### Merge Subsets Into A Working Dataframe as 'df'

```{r}
df <- list(diet, tiid, bhg, uhg) %>% reduce(full_join, by = "SEQN")

df <- df %>% reduce(full_join, by = 'SEQN')

# Bring in age
df <- df %>%
  left_join(demographics %>% select(SEQN, RIDAGEYR), by = "SEQN")
```

1.  Filter Dataframe df for the following:

```{r} demo <- demographics %>% select(SEQN, RIDAGEYR)}
```

2.  Do some exploratory data analysis
3.  

```{r}
df %>% summarise(rows = n(), cols = ncol(.), non_missing_age = sum(!is.na(RIDAGEYR)))
```

```{r}

```

```{r}
df <- df %>%
  mutate(
    diabetes = recode(DIQ010, `1` = 1L, `2` = 0L, .default = NA_integer_),
    tuna     = recode(DRD370B, `1` = 1L, `2` = 0L, .default = NA_integer_)
  )

```

```{r}
janitor::tabyl(df$diabetes) %>% janitor::adorn_pct_formatting()
janitor::tabyl(df$tuna)     %>% janitor::adorn_pct_formatting()
```

```{r}
# Missingness overview for key fields
df %>%
  summarise(
    n = n(),
    miss_diabetes = sum(is.na(diabetes)),
    miss_tuna = sum(is.na(tuna)),
    miss_age = sum(is.na(RIDAGEYR))
  )

# Cross-tab tuna vs diabetes
df %>%
  filter(!is.na(tuna), !is.na(diabetes)) %>%
  count(tuna, diabetes) %>%
  tidyr::pivot_wider(names_from = diabetes, values_from = n, values_fill = 0) %>%
  janitor::adorn_totals("row")
```

```{r}
# Restrict to rows with definite values A and B
dat_AB <- df %>% filter(!is.na(diabetes), !is.na(tuna))

p_B <- mean(dat_AB$diabetes == 1)
p_A <- mean(dat_AB$tuna == 1)

#Likelihood (as defined in the prompt): L(B|A) = P(A|B)
p_A_given_B <- mean (dat_AB$tuna[dat_AB$diabetes == 1] == 1)

# Posterior via Bayes theorem
p_B_given_A_bayes <- p_A_given_B * p_B / p_A

# Direct check: P(B|A) should equal #(A^B) /#A
P_B_given_A_direct <- with(dat_AB, mean(diabetes[tuna == 1] == 1))


tibble(
  'P(B)' = p_B,
  'P(A)' = p_A,
  'P(A|B)' = p_A_given_B,
  'P(B|A) via Bayes' = p_B_given_A_bayes,
  'P(B|A) direct' = P_B_given_A_direct
) %>% mutate(across(everything(), scales::percent_format(accuracy = 0.1)))

```

```{r}
tibble(
  'P(B|A=1)' = with(dat_AB, mean(diabetes[tuna==1]==1)),
  'P(B|A=0)' = with(dat_AB, mean(diabetes[tuna==0]==1))
) %>% mutate(across(everything(), scales::percent))
```

2.  

3.  Determine the prior probability that someone has diabetes (DIQ010)

    -   P(B)

4.  Determine the prior probability that someone eats tuna (DRD370B)

    -   P(A)

5.  Determine the likelihood of eating tuna and having diabetes

    -   L(B\|A) = P(A\|B)

6.  Determine posterior probability via bayes theorem

    -   P(B\|A)

7.  What other questions can we ask of this data?

#### Bayes Theorem

$$
P(B \mid A) = \frac{P(B) L(B \mid A)}{P(A)} 
$$

B \<- Has Diabetes

A \<- Consumes Ahi

#### 

### Challenge

Determine the posterior probability that someone has diabetes given they are over the age of 40. Age is in the demographics dataframe, you will have to join it with the tiid data.

```{r}
over40 <- df %>%
  filter(RIDAGEYR > 40, !is.na(diabetes))

n_over40 <- nrow(over40)
y_over40 <- sum(over40$diabetes)

p_B_given_age40_direct <- y_over40 / n_over40
c(n_over40 = n_over40, y_over40 = y_over40, P_B_given_age40 = p_B_given_age40_direct)
```

```{r}

# Read data
demographics <- read_xpt(here("data/nhanes_data/2017-2018_Demographics.XPT"))
diabetes     <- read_xpt(here("data/nhanes_data/2017-2018_Diabetes.XPT"))

# Make 'tiid'
tiid <- select(diabetes, SEQN, DIQ010, DIQ170)

# One-pipe solution: P(diabetes | age > 40) with Beta(1,1) prior
a0 <- 1; b0 <- 1
res <- demographics %>%
  select(SEQN, RIDAGEYR) %>%
  inner_join(tiid %>% select(SEQN, DIQ010), by = "SEQN") %>%
  filter(RIDAGEYR > 40) %>%
  transmute(diabetes = recode(DIQ010, `1`=1L, `2`=0L, .default=NA_integer_)) %>%
  drop_na(diabetes) %>%
  summarise(n = n(), y = sum(diabetes)) %>%
  mutate(a = a0 + y, b = b0 + (n - y),
         post_mean = a/(a+b),
         ci_lo = qbeta(0.025, a, b),
         ci_hi = qbeta(0.975, a, b))

print(res)

# quick visual
curve(dbeta(x, res$a, res$b), from = 0, to = 1,
      xlab = "P(diabetes | age > 40)", ylab = "Density",
      main = sprintf("Posterior Beta(%d, %d) | prior Beta(%d, %d)", res$a, res$b, a0, b0))

```
